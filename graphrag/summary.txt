GraphRAG-based Yoga Recommendation System Summary

This is a GraphRAG-based yoga recommendation system with the following key components:

Database Files:
- JSON arrays: Structured yoga data for poses, courses, attributes, categories, challenges, anatomical parts, and health issues
- Neo4j database: Knowledge graph storing relationships between poses, courses, and attributes
- ChromaDB: Vector database for semantic search of pose descriptions and course content

Python Scripts:
1. build_graphrag.py: Builds the hybrid knowledge system by:
   - Loading JSON data into Neo4j as a knowledge graph
   - Creating relationships between poses (BUILD_UP, MOVE_FORWARD, BALANCE_OUT, UNWIND)
   - Populating ChromaDB with embeddings for semantic search
   - Linking courses to poses with sequence information

2. query-response.py: RAG system for generating personalized yoga recommendations:
   - Uses LangChain with OpenAI GPT-4 and HuggingFace embeddings
   - Combines Neo4j graph queries with ChromaDB vector search
   - Handles contraindications and safety considerations
   - Generates safe yoga sequences based on user constraints

Supporting Files:
- prompt_to_extract_user_query.txt: Template for parsing user queries into structured format (objectives, contraindications, body parts, duration, etc.)

The system creates a comprehensive yoga knowledge base that can provide personalized, safe recommendations by considering user constraints and relationships between poses.